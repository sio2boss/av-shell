#! /bin/bash

# Import color
source $AV_CONFIG_DIR/default_imports

# Check for a help flag
avCheckHelpFlags "$1" "docker" "Build a container from a Dockerfile" "\
Usage: 

    build --name-override <name>

        Resulting image: <repo>/<name>

    build --one-repo

        Resulting image: <repo>/<domain>:<container>

    build

        Resulting image: <repo>/<domain>/<container>
"

#### Put system commands here

# Get container provider, default to docker if not set
provider=$(container_provider)
if [ -z "$provider" ]; then
    provider="docker"
fi

domain=$(cat $AV_PROJECT_CONFIG_DIR/prompt | sed "s/\ /\_/g")
if [ -z $domain ]; then
	echo -e "${txtred}Unable to understand prompt text as docker domain${txtrst}"
	exit 1
fi

container=$(getpv container)
if [ -z $container ]; then
	echo -e "${txtred}Set your container context via \'choose\'${txtrst}"
	exit 1
fi

container_path=$(container_path)
if [ -z $container_path ]; then
	echo -e "${txtred}Unable to find container path${txtrst}"
	exit 1
fi

if [[ ! -z $DEPLOYMENT_ENV ]]; then
	container_domain=$container-$DEPLOYMENT_ENV
else
	container_domain=$container
fi

artifacts_url=$(getpv artifacts-url)
artifacts_auth_token=$(getpv artifacts-token)
if [[ ! -z "${artifacts_auth_token}" ]]; then
	export CODEARTIFACT_AUTH_TOKEN=${artifacts_auth_token}
	build_args+=" --build-arg CODEARTIFACT_URL=${artifacts_url} --secret id=codeartifact-auth-token,env=CODEARTIFACT_AUTH_TOKEN --build-arg NPM_TOKEN=$NPM_TOKEN"
fi

# Check for tagstyle setting
tag_style=$(getpv tagstyle)

# Apply tag style based on tagstyle setting
if [[ -z "$tag_style" ]]; then
	echo -e "${txtred}No tag style set. Run 'tagstyle' to choose a format:${txtrst}"
	exit 1
fi


if [[ "$tag_style" == "sans-domain" ]]; then
	container_tag=$container
elif [[ "$tag_style" == "one-repo" ]]; then
	container_tag=$domain/$container_domain
elif [[ "$tag_style" == "with-domain" ]]; then
	container_tag=$domain/$container_domain
fi

if [[ $1 == "--name-override" ]]; then
	shift
	container_tag=$1
	shift
fi

# Import system path
avAppendSystemPath
avCheckVerbose "$provider build $@ ${build_args} -t $container_tag $container_path"

cd $(container_path) && $provider build $@ ${build_args} -t $container_tag $container_path
exit $?