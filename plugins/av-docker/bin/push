#! /bin/bash

# Import color
source $AV_CONFIG_DIR/default_imports

# Check for a help flag
avCheckHelpFlagsPassThrough "$1" "docker" "Push an image or a \
repository to a Docker registry server" "docker pull --help"

#### Put system commands here

domain=$(cat $AV_PROJECT_CONFIG_DIR/prompt | sed "s/\ /\_/g")
if [ -z $domain ]; then
	echo -e "${txtred}Unable to understand prompt text as docker domain${txtrst}"
	echo 1
fi

container=$(getpv container)
if [ -z $container ]; then
	echo -e "${txtred}Set your container context via \'choose\'${txtrst}"
	echo 1
fi

repo=$(getpv repo)
if [ -z $repo ]; then
	echo -e "${txtred}Set your repo context setpv repo <server:5000>${txtrst}"
	echo 1
fi

# Override container domain if DEPLOYMENT_ENV is set
if [[ ! -z $DEPLOYMENT_ENV ]]; then
	echo "Appending DEPLOYMENT_ENV envvar to container name"
	container_domain=$container-$DEPLOYMENT_ENV
else
	container_domain=$container
fi

# Check for tagstyle setting
tag_style=$(getpv tagstyle)

tag_value=$1
if [ $# -lt 1 ]; then
	tag_value=$(codehash)
fi

# Apply tag style based on tagstyle setting
if [[ -z "$tag_style" ]]; then
	echo -e "${txtred}No tag style set. Run 'tagstyle' to choose a format${txtrst}"
	exit 1
fi

if [[ "$tag_style" == "sans-domain" ]]; then
	container_push=$repo/$container:$tag_value
elif [[ "$tag_style" == "one-repo" ]]; then
	container_push=$repo/$container_domain:$container-$tag_value
elif [[ "$tag_style" == "with-domain" ]]; then
	container_push=$repo/$container_domain/$container:$tag_value
else
	echo -e "${txtred}Invalid tag style '$tag_style'. Run 'tagstyle' to choose a valid format.${txtrst}"
	exit 1
fi

# Import system path
avAppendSystemPath

avCheckVerbose "docker push ${container_push}"
cd $AV_ROOT/.. && docker push ${container_push}
exit $?

#### End commands
