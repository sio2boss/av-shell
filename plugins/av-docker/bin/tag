#! /bin/bash

# Import color
source $AV_CONFIG_DIR/default_imports

# Check for a help flag
avCheckHelpFlags "$1" "docker" "Tag current container on a repository" "\
Usage: 

    tag [version]

        Resulting image path will change based on the holdtag setting.
"

# Import system path
avAppendSystemPath

#### Put system commands here

# Get container provider, default to docker if not set
provider=$(container_provider)
if [ -z "$provider" ]; then
    provider="docker"
fi

tag_value=$1
if [ $# -lt 1 ]; then
	tag_value=$(codehash)
fi

domain=$(cat $AV_PROJECT_CONFIG_DIR/prompt | sed "s/\ /\_/g")
if [ -z $domain ]; then
	echo -e "${txtred}Unable to understand prompt text as docker domain${txtrst}"
	exit 1
fi

container=$(getpv container)
if [ -z $container ]; then
	echo -e "${txtred}Set your container context via \'choose\'${txtrst}"
	exit 1
fi

repo=$(getpv repo)
if [ -z $repo ]; then
	echo -e "${txtred}Set your repo context setpv repo <server:5000>${txtrst}"
	exit 1
fi

# Override container domain if DEPLOYMENT_ENV is set
if [[ ! -z $DEPLOYMENT_ENV ]]; then
	echo "Appending DEPLOYMENT_ENV envvar to container name"
	container_domain=$container-$DEPLOYMENT_ENV
else
	container_domain=$container
fi

# Check for holdtag setting
tag_style=$(getpv holdtag)

# Apply tag style based on holdtag setting
if [[ "$tag_style" == "name-override" ]]; then
	container_push=$repo/$container:$tag_value
elif [[ "$tag_style" == "one-repo" ]]; then
	container_push=$repo/$container_domain:$container-$tag_value
else
	container_push=$repo/$container_domain/$container:$tag_value
fi

avCheckVerbose "$provider tag $domain/$container ${container_push}"
cd $AV_ROOT/.. && $provider tag $domain/$container ${container_push}
exit $?

#### End commands
