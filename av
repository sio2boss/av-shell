#!/bin/bash

# Get the absolute path of the executable
function realpath {
    local r=$1; local t=$(readlink $r)
    while [ $t ]; do
        r=$(cd $(dirname $r) && cd $(dirname $t) && pwd -P)/$(basename $t)
        t=$(readlink $r)
    done
    echo $r
}
AV_INSTALLED_PATH=$(dirname $(realpath "$0"))

# Figure out where the .av directory is starting with pwd
upsearch () {
  slashes=${PWD//[^\/]/}
  directory="$PWD"
  for (( n=${#slashes}; n>0; --n ))
  do
    test -e "$directory/$1" && export AV_ROOT="$directory/$1" && return
    directory="$directory/.."
  done
}
upsearch ".av"

# Built-in commands
if [[ "$1" == "init" && -z "$AV_ROOT" ]]; then
	echo "This utility creates a new domain specific shell in your current path"
	echo

	echo "your prompt should be named?:"
	read prompt

	echo
	echo "copying files..."
	mkdir .av
	cp -r $AV_INSTALLED_PATH/bin .av/
	cp -r $AV_INSTALLED_PATH/config .av/
	echo "$prompt" > .av/config/prompt

	echo
	echo "done"

	exit
fi

if [ -z "$AV_ROOT" ]; then
	echo "Unable to find av environment, have you run 'av init'?"
	exit
fi


# Handle update command
if [ "$1" == "update" ]; then
	cp -vr $AV_INSTALLED_PATH/bin/* $AV_ROOT/bin/
	cp -v $AV_INSTALLED_PATH/config/default_imports $AV_ROOT/config/
	cp -v $AV_INSTALLED_PATH/config/passthrough_template $AV_ROOT/config/
	cp -v $AV_INSTALLED_PATH/config/rc $AV_ROOT/config/
	cp -v $AV_INSTALLED_PATH/config/template $AV_ROOT/config/
	cp -v $AV_INSTALLED_PATH/config/welcome $AV_ROOT/config/
	cp -v $AV_INSTALLED_PATH/config/color $AV_ROOT/config/
	mkdir -p  $AV_ROOT/config/vars

	exit
fi


# Change dir to script root
cd $AV_ROOT/.. > /dev/null

# If there are arguments, just run them rather than opening a shell
if [ $# -eq 0 ]; then

	# Open shell
	AV_ROOT=$AV_ROOT bash --rcfile $AV_ROOT/config/rc

else

	# Run command in shell
	AV_NON_INTERACTIVE=true AV_ROOT=$AV_ROOT PATH=$AV_ROOT/bin:$PATH bash --rcfile $AV_ROOT/config/rc -i -c "$*"

fi

# Go back
cd - > /dev/null
